name: dds_thinbox # Replace this name with your image name
id: dds_thinbox # Replace this ID with your image ID
stages:
- id: build
  base: ghcr.io/vanilla-os/desktop:main # Optionally, Replace this image URL with a different one i.e. nvidia:main, etc
  singlelayer: false
  labels:
    maintainer: self-maintained # Optionally, Replace this with your name
  args:
    DEBIAN_FRONTEND: noninteractive # Set the image environment as non-interactive
  
  # Commands to run first before building the modules
  runs:
    commands:
      - echo 'APT::Install-Recommends "1";' > /etc/apt/apt.conf.d/01norecommends

  modules:
  - name: init-setup
    type: shell
    commands:
    - lpkg --unlock
    - apt-get update
    
  modules:
  - name: dds-setup
    type: shell
    commands:
    - "add-apt-repository -y ppa:zhangsongcui3371/fastfetch"
    - "apt update && apt install -y curl"
    - "wget -q -O - https://workspaces-client-linux-public-key.s3-us-west-2.amazonaws.com/ADB332E7.asc | sudo apt-key add -"
    - "echo 'deb [arch=amd64] https://d3nt0h4h6pmmc4.cloudfront.net/ubuntu jammy main' | sudo tee /etc/apt/sources.list.d/amazon-workspaces-clients.list"
    - "apt update"
    - "apt install -y workspacesclient"
    - "apt install -y fastfetch"
    - "curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg"
    - "install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/"
    - "sh -c 'echo \"deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main\" > /etc/apt/sources.list.d/microsoft-edge-dev.list'"
    - "rm microsoft.gpg"
    - "apt update && apt install -y microsoft-edge-stable"
    - "apt install -y intune-portal"
    - "chmod +x /usr/local/bin/updateme.sh"

  # Put your custom actions behind this comment
  # - name: dds=setup
  #  type: includes
  #  includes:
  #    - modules/02-dds.yml

  # Put your custom actions before this comment

  - name: set-image-name-abroot
    type: includes
    includes:
      - modules/80-set-image-abroot-config.yml

  - name: cleanup
    type: shell
    commands:
    - apt-get autoremove -y
    - apt-get clean
    - lpkg --lock

  - name: fsguard
    type: fsguard
    CustomFsGuard: false
    FsGuardLocation: "/usr/sbin/FsGuard"
    GenerateKey: true
    FilelistPaths: ["/usr/bin"]
    modules:
      - name: remove-prev-fsguard
        type: shell
        commands:
          - rm -rf /FsGuard 
          - rm -f ./minisign.pub ./minisign.key 
          - chmod +x /usr/sbin/init

  - name: cleanup2
    type: shell
    commands:
      - rm -rf /tmp/*
      - rm -rf /var/tmp/*
      - rm -rf /sources
